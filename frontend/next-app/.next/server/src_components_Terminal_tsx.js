"use strict";
/*
 * ATTENTION: An "eval-source-map" devtool has been used.
 * This devtool is neither made for production nor for readable output files.
 * It uses "eval()" calls to create a separate source file with attached SourceMaps in the browser devtools.
 * If you are trying to read the output file, select a different devtool (https://webpack.js.org/configuration/devtool/)
 * or disable the default devtool with "devtool: false".
 * If you are looking for production-ready output files, see mode: "production" (https://webpack.js.org/configuration/mode/).
 */
exports.id = "src_components_Terminal_tsx";
exports.ids = ["src_components_Terminal_tsx"];
exports.modules = {

/***/ "./src/components/Terminal.tsx":
/*!*************************************!*\
  !*** ./src/components/Terminal.tsx ***!
  \*************************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   \"default\": () => (/* binding */ XTerminal)\n/* harmony export */ });\n/* harmony import */ var react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! react/jsx-dev-runtime */ \"react/jsx-dev-runtime\");\n/* harmony import */ var react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_0___default = /*#__PURE__*/__webpack_require__.n(react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_0__);\n/* harmony import */ var react__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! react */ \"react\");\n/* harmony import */ var react__WEBPACK_IMPORTED_MODULE_1___default = /*#__PURE__*/__webpack_require__.n(react__WEBPACK_IMPORTED_MODULE_1__);\n/* harmony import */ var xterm__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! xterm */ \"xterm\");\n/* harmony import */ var xterm__WEBPACK_IMPORTED_MODULE_2___default = /*#__PURE__*/__webpack_require__.n(xterm__WEBPACK_IMPORTED_MODULE_2__);\n/* harmony import */ var xterm_addon_fit__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! xterm-addon-fit */ \"xterm-addon-fit\");\n/* harmony import */ var xterm_addon_fit__WEBPACK_IMPORTED_MODULE_3___default = /*#__PURE__*/__webpack_require__.n(xterm_addon_fit__WEBPACK_IMPORTED_MODULE_3__);\n\n\n\n\nfunction XTerminal() {\n    const containerRef = (0,react__WEBPACK_IMPORTED_MODULE_1__.useRef)(null);\n    const wsRef = (0,react__WEBPACK_IMPORTED_MODULE_1__.useRef)(null);\n    const termRef = (0,react__WEBPACK_IMPORTED_MODULE_1__.useRef)(null);\n    const fitTimeout = (0,react__WEBPACK_IMPORTED_MODULE_1__.useRef)(null);\n    const reconnectTimer = (0,react__WEBPACK_IMPORTED_MODULE_1__.useRef)(null);\n    const reconnectAttempts = (0,react__WEBPACK_IMPORTED_MODULE_1__.useRef)(0);\n    (0,react__WEBPACK_IMPORTED_MODULE_1__.useEffect)(()=>{\n        // require a real container DOM node before instantiating xterm\n        if (!containerRef.current) {\n            return;\n        }\n        const term = new xterm__WEBPACK_IMPORTED_MODULE_2__.Terminal({\n            convertEol: true\n        });\n        const fit = new xterm_addon_fit__WEBPACK_IMPORTED_MODULE_3__.FitAddon();\n        term.loadAddon(fit);\n        term.open(containerRef.current);\n        // defer fit() so xterm has time to initialize its renderer; avoids\n        // \"_renderer.value is undefined\" when the renderer isn't ready yet.\n        fitTimeout.current = window.setTimeout(()=>{\n            try {\n                fit.fit();\n            } catch (e) {\n                console.warn(\"fit failed\", e);\n            }\n            try {\n                term.focus();\n            } catch (e) {}\n        }, 0);\n        termRef.current = term;\n        function makeWs() {\n            // Use the same host the page was served from so devices on the LAN\n            // (phone) connect back to the server running on the laptop.\n            const host = window.location.hostname || \"localhost\";\n            const proto = window.location.protocol === \"https:\" ? \"wss://\" : \"ws://\";\n            const url = `${proto}${host}:3001/pty`;\n            console.debug(\"terminal: connecting ws ->\", url);\n            let ws;\n            try {\n                ws = new WebSocket(url);\n            } catch (e) {\n                console.error(\"terminal: websocket construction failed\", e);\n                scheduleReconnect();\n                // return a noop cleanup so callers can continue\n                return ()=>{};\n            }\n            wsRef.current = ws;\n            ws.onopen = ()=>{\n                reconnectAttempts.current = 0;\n                console.debug(\"terminal: ws open\");\n                term.write(\"\\r\\nConnected to biohacker PTY server\\r\\n\");\n                ws.send(JSON.stringify({\n                    type: \"resize\",\n                    cols: term.cols,\n                    rows: term.rows\n                }));\n            };\n            ws.onmessage = (ev)=>{\n                const data = typeof ev.data === \"string\" ? ev.data : \"\";\n                term.write(data);\n            };\n            ws.onclose = (ev)=>{\n                console.warn(\"terminal: ws closed\", ev);\n                term.write(\"\\r\\n[connection closed]\\r\\n\");\n                scheduleReconnect();\n            };\n            ws.onerror = (e)=>{\n                console.error(\"terminal: ws error\", e);\n            };\n            // wire terminal input to the websocket\n            term.onData((d)=>{\n                if (ws.readyState === WebSocket.OPEN) {\n                    ws.send(JSON.stringify({\n                        type: \"input\",\n                        data: d\n                    }));\n                }\n            });\n            // handle resize events and notify the server when connected\n            const handleResize = ()=>{\n                fit.fit();\n                if (ws.readyState === WebSocket.OPEN) {\n                    ws.send(JSON.stringify({\n                        type: \"resize\",\n                        cols: term.cols,\n                        rows: term.rows\n                    }));\n                }\n            };\n            window.addEventListener(\"resize\", handleResize);\n            // cleanup callback for this ws instance\n            const cleanup = ()=>{\n                window.removeEventListener(\"resize\", handleResize);\n                try {\n                    if (ws && (ws.readyState === WebSocket.OPEN || ws.readyState === WebSocket.CONNECTING)) ws.close();\n                } catch (e) {}\n            };\n            return cleanup;\n        }\n        function scheduleReconnect() {\n            if (reconnectTimer.current) return; // already scheduled\n            reconnectAttempts.current += 1;\n            const backoff = Math.min(1000 * Math.pow(2, reconnectAttempts.current - 1), 30000);\n            reconnectTimer.current = window.setTimeout(()=>{\n                reconnectTimer.current = null;\n                try {\n                    makeWs();\n                } catch (e) {\n                    console.warn(\"reconnect failed\", e);\n                    scheduleReconnect();\n                }\n            }, backoff);\n        }\n        // start first connection\n        const wsCleanup = makeWs();\n        return ()=>{\n            if (reconnectTimer.current) {\n                clearTimeout(reconnectTimer.current);\n                reconnectTimer.current = null;\n            }\n            if (fitTimeout.current) {\n                clearTimeout(fitTimeout.current);\n                fitTimeout.current = null;\n            }\n            try {\n                wsCleanup();\n            } catch (e) {}\n            try {\n                term.dispose();\n            } catch (e) {}\n        };\n    }, []);\n    return /*#__PURE__*/ (0,react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_0__.jsxDEV)(\"div\", {\n        className: \"xterm-container\",\n        ref: containerRef,\n        tabIndex: 0\n    }, void 0, false, {\n        fileName: \"/home/arn365/Documents/biohacker/frontend/next-app/src/components/Terminal.tsx\",\n        lineNumber: 120,\n        columnNumber: 10\n    }, this);\n}\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,\n//# sourceURL=webpack-internal:///./src/components/Terminal.tsx\n");

/***/ })

};
;